plugins {
	id 'org.quiltmc.loom' version '1.3.3'
	id 'org.quiltmc.gradle.licenser' version '2.0.1'
}

license {
	rule project.rootProject.file("codeformat/FABRIC_MODIFIED_HEADER")
	rule project.rootProject.file("codeformat/QUILT_MODIFIED_HEADER")
	rule project.rootProject.file("codeformat/HEADER")

	include '**/*.java'
	exclude '**/lib/gson/*.java'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

loom {
	runConfigs.configureEach {
		ideConfigGenerated = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:1.20.4"
	mappings "org.quiltmc:quilt-mappings:1.20.4+build.1:intermediary-v2"

	implementation project(":providers:minecraft")
	implementation project(":providers:minecraft").sourceSets.main.output
	implementation project(":loader")
	implementation project(":loader").sourceSets.main.output

	// Provided for runtime.
	implementation "org.quiltmc.chasm:chassembly:${project.quilt_chasm}"
	implementation "org.quiltmc.chasm:chasm:${project.quilt_chasm}"

	// Required for Mixins annotation processor.
	annotationProcessor "org.ow2.asm:asm:${project.asm}"
	annotationProcessor "org.ow2.asm:asm-analysis:${project.asm}"
	annotationProcessor "org.ow2.asm:asm-commons:${project.asm}"
	annotationProcessor "org.ow2.asm:asm-tree:${project.asm}"
	annotationProcessor "org.ow2.asm:asm-util:${project.asm}"

	annotationProcessor ("net.fabricmc:sponge-mixin:${project.sponge_mixin}") {
		exclude module: 'launchwrapper'
		exclude module: 'guava'
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release.set(17)
}
