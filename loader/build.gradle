sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.name
version = project.fable

sourceSets {
	main {
		java.srcDirs = ['src/main/java', 'src/fabric/api/java', 'src/fabric/impl/java', 'src/fabric/legacy/java']
	}
}

// Reproduce Loom configurations because we don't apply the plugin.
configurations {
	include {
	   transitive = false
	}

	implementation {
		extendsFrom include
	}

	development {
		transitive = false
	}

	api {
		extendsFrom development
	}
}

dependencies {
	// Non-"include"d dependencies must be added to the LoaderLibrary class as well.
	api "org.ow2.asm:asm:${project.asm}"
	api "org.ow2.asm:asm-analysis:${project.asm}"
	api "org.ow2.asm:asm-commons:${project.asm}"
	api "org.ow2.asm:asm-tree:${project.asm}"
	api "org.ow2.asm:asm-util:${project.asm}"

	api("net.fabricmc:sponge-mixin:${project.sponge_mixin}") {
		exclude module: 'launchwrapper'
		exclude module: 'guava'
	}

	api "net.fabricmc:tiny-mappings-parser:${project.tiny_mappings_parser}"
	api "net.fabricmc:tiny-remapper:${project.tiny_remapper}"

	api "net.fabricmc:access-widener:${project.access_widener}"

	api "org.quiltmc:quilt-json5:${project.quilt_json5}"

	include "org.quiltmc:quilt-loader-sat4j:${project.quilt_loader_sat4j}"

	include "org.quiltmc.quilt-config.serializers:toml:${project.quilt_config}"
	include "org.quiltmc.quilt-config.serializers:json5:${project.quilt_config}"
	api "org.quiltmc:quilt-config:${project.quilt_config}"

	include "com.electronwill.night-config:core:${project.night_config}"
	include "com.electronwill.night-config:toml:${project.night_config}"

	development "io.github.llamalad7:mixinextras-fabric:$mixin_extras"

	compileOnly "org.quiltmc.chasm:chasm:${project.quilt_chasm}"
	compileOnly "org.quiltmc.chasm:chassembly:${project.quilt_chasm}"

	include "org.quiltmc.parsers:json:${project.quilt_parsers}"

	include "com.unascribed:flexver-java:${project.flexver}"

	testCompileOnly "org.jetbrains:annotations:${project.annotations}"
}

processResources {
	inputs.property "version", project.version
	inputs.property "tiny_mappings_parser", project.tiny_mappings_parser
	inputs.property "sponge_mixin", project.sponge_mixin
	inputs.property "tiny_remapper", project.tiny_remapper
	inputs.property "access_widener", project.access_widener
	inputs.property "quilt_json5", project.quilt_json5
	inputs.property "asm", project.asm
	inputs.property "asm_analysis", project.asm
	inputs.property "asm_commons", project.asm
	inputs.property "asm_tree", project.asm
	inputs.property "asm_util", project.asm
	inputs.property "quilt_config", project.quilt_config
	inputs.property "mixin_extras", project.mixin_extras

	filesMatching("quilt.mod.json") {
		expand "version": project.version
	}

	filesMatching(["quilt_installer.json", "fabric-installer.launchwrapper.json"]) {
		expand(
			"tiny_mappings_parser": project.tiny_mappings_parser,
			"sponge_mixin": project.sponge_mixin,
			"tiny_remapper": project.tiny_remapper,
			"access_widener": project.access_widener,
			"quilt_json5": project.quilt_json5,
			"asm": project.asm,
			"asm_analysis": project.asm,
			"asm_commons": project.asm,
			"asm_tree": project.asm,
			"asm_util": project.asm,
			"quilt_config": project.quilt_config,
			"mixin_extras": project.mixin_extras,
		)
	}
}
